[tool.poetry]
name = "swo-adobe-vimp-extension"
version = "0.1.0"
description = "Adobe VIP Marketplace extension for SWO Marketplace Platform"
authors = ["Apache Software License 2.0"]
license = "Apache-2.0 license"
packages = [
    { include = "adobe_vipm" }
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12,<4"
requests = "2.31.*"
django = "4.2.*" # should it be a dependency of the extension ? it is already a dependency of the sdk.

# Remove when devmock is not needed anymore
[tool.poetry.group.devmock.dependencies]
uvicorn = "^0.25.0"
fastapi = "^0.109.0"
lib-rql = "^2.0.0"
faker = "^22.2.0"
rich = "^13.7.0"

[tool.poetry.group.dev.dependencies]
pytest = "7.4.*"
black = "23.12.*"
ipdb = "0.13.*"
isort = "5.13.*"
flake8 = "6.1.*"
flake8-pytest-style = "1.7.*"
flake8-bugbear = "23.12.*"
flake8-debugger = "4.1.*"
pytest-randomly = "3.15.*"
pytest-xdist = "3.5.*"
pytest-cov = "4.1.*"
flake8-black = "0.3.*"
flake8-isort = "6.1.*"
ipython = "8.*"
pytest-mock = "3.12.*"
pytest-django = "4.7.*"
responses = "0.24.*"
freezegun = "1.4.*"
pytest-deadfixtures = "2.2.*"
mypy = "1.8.*"
types-requests = "2.31.*"


# Move to the SDK when splitting
[tool.poetry.group.sdk.dependencies]
typing-extensions = "^4.9.0"
django-ninja = "^1.1.0"
pyjwt = "^2.8.0"


# Move to runtime when splitting
[tool.poetry.group.runtime.dependencies]
azure-monitor-opentelemetry-exporter = "^1.0.0b21"
opentelemetry-api = "^1.22.0"
opentelemetry-sdk = "^1.22.0"
opentelemetry-instrumentation-django = "^0.43b0"
opentelemetry-instrumentation-requests = "^0.43b0"
opentelemetry-instrumentation-logging = "^0.43b0"
click = "^8.1.7"
gunicorn = "^21.2.0"
watchfiles = "^0.21.0"
pyfiglet = "^1.0.2"
rich = "^13.7.0"

[tool.poetry.scripts]
swoext = 'swo.mpt.extensions.runtime.swoext:main' # Move to runtime when splitting
mockgendata = 'devmock.mockgendata:main' # Remove when devmock is not needed anymore


[tool.poetry.plugins."swo.mpt.ext"]
"app_config" = "adobe_vipm.apps:ExtensionConfig"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = "tests"
pythonpath = "."
addopts = "--cov=adobe_vipm --cov-report=term-missing --cov-report=html --cov-report=xml"
DJANGO_SETTINGS_MODULE = "tests.django.settings"
log_cli = false
filterwarnings = [
    "ignore:Support for class-based `config` is deprecated:DeprecationWarning",
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
]

[tool.coverage.run]
branch = true

[tool.isort]
profile = "black"
known_third_party = ["swo"]

[tool.black]
line-length = 100

[tool.mypy]
warn_no_return = false

[[tool.mypy.overrides]]
module = "django.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyfiglet.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gunicorn.*"
ignore_missing_imports = true
